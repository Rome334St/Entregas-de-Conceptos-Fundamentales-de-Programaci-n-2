Entrega Final 
Conceptos Fundamentales de Programación
Santiago Romero Barrios 
29/04/2025

Para este proyecto, se emplearon distintos conocimientos y funcionalidades del desarrollo de software, que permitieron cubrir las necesidades y características que requería el problema general. Durante las tres entregas se desplegaron diferentes mejoras y añadidos que se fueron complementando para lograr el funcionamiento optimo del programa. A continuación, se expondrán los diferentes conocimientos que se requirieron e implementaron a lo largo de todo el proyecto.
Programación Orientada a Objetos: En el núcleo de este proyecto reside la Programación Orientada a Objetos. Se ha modelado los elementos clave del problema, como sus clases bien definidas. Cada clase encapsula sus propios datos y comportamientos, permitiendo una organización lógica y una manipulación coherente de la información. Esta forma de estructurar el código no solo facilita la comprensión del sistema, sino que también promueve la reutilización de componentes y la extensibilidad a futuro. 
Manejo de Archivos: Un aspecto sumamente importante del proyecto ha sido la capacidad de interactuar con archivos. Hemos implementado la lectura de archivos de texto para cargar la información de los vendedores, los productos y sus ventas, interpretando los datos estructurados. También, se ha desarrollado la funcionalidad para generar nuevos archivos, los reportes de ventas por vendedor y por producto, exponiendo en ellos la información procesada de manera organizada. 
Estructuras de Datos: Para gestionar eficientemente la información, se han empleado diversas estructuras de datos. Las listas nos han permitido mantener colecciones ordenadas de vendedores y ventas, facilitando la iteración y el procesamiento. Por otro lado, los mapas han sido clave para acceder rápidamente a la información, como buscar un producto por su ID o almacenar el total de ventas por cada vendedor. 
Flujo: La lógica de nuestro programa se basa en el control de flujo. Se han utilizado bucles para iterar sobre los archivos y las colecciones de datos, aplicando las operaciones necesarias a cada elemento. Las estructuras condicionales nos han permitido tomar decisiones dentro del código, por ejemplo, para validar el formato de los datos leídos desde los archivos o para manejar diferentes escenarios durante el procesamiento. 
Manejo de Excepciones: Sabiendo que pueden surgir errores durante la ejecución, se han implementado mecanismos de manejo de excepciones. Mediante try-catch, se han anticipado posibles problemas, como errores al leer o escribir archivos o al intentar convertir datos a un formato incorrecto. Esto nos permite que el programa no se detenga abruptamente y, en su lugar, pueda gestionar la situación de manera controlada, informando del error si es necesario. 
API de Streams de Java: Para el procesamiento de las colecciones de datos, se han aprovechado la potencia de la API de Streams de Java. Esto nos ha permitido realizar operaciones complejas como filtrado, mapeo y ordenamiento de manera precisa y declarativa, lo que se traduce en un código más legible y eficiente. 
Ordenamiento: Finalmente, el ordenamiento ha sido fundamental para la generación de los reportes solicitados. Se han implementado comparadores personalizados para ordenar a los vendedores según su total de ventas y los productos según la cantidad vendida. Esta capacidad de presentar la información de manera organizada es esencial en muchas aplicaciones.

Aplicaciones ara la Vida Profesional 
Los conocimientos adquiridos en este proyecto han sido de gran ayuda para reforzar y mejorar mis competencias como aspirante a desarrollador de software, un aspecto clave que se trabajó en este proyecto, es la capacidad de la resolución de problemas, esto es esencial para analizar desafíos complejos y encontrar soluciones efectivas en cualquier ámbito profesional. La gestión de datos también es un aspecto muy importante que se implementó en el proyecto, esto se puede evidenciar en el manejo de archivos y estructuras de datos, proporcionando herramientas para procesar y analizar información de manera eficiente en diversos roles. La automatización de tareas y la adaptabilidad a leguajes y frameworks, también son competencias de suma importancia, que se implementaron en este proyecto, y complementan mis conocimientos como desarrollador.

Dificultades presentadas durante el desarrollo del proyecto. 
Este proyecto, como ya se expuso previamente, consto del complemento de diversos conocimientos en desarrollo de software, que como desarrollador, algunos ya estaban previamente adquiridos y otros se aprendieron durante el proceso. Algunos de los aspectos que presentaron más dificultad fueron: 

La lectura y procesamiento de los archivos de ventas individuales de cada vendedor: La variabilidad en la cantidad de archivos y la asociación de cada venta al vendedor correspondiente, generaron un reto muy grande a la hora de la implementación de la clase GestiondeArchivos. 

La asociación de las ventas con los productos y el cálculo del total vendido por cada vendedor: Este proceso requirió una gestión muy precisa del mapa de productos para buscar el precio unitario de cada producto vendido. Asegurar que se manejaran los casos en los que un ID de producto en un archivo de ventas no existiera en el archivo de productos fue bastante difícil.

El ordenamiento de los vendedores por el total de ventas y de los productos por la cantidad vendida: Implementar la lógica de ordenamiento utilizando Comparator y la API de Streams de Java, requirio una investigación y comprensión clara de cómo comparar objetos y cómo ordenar colecciones. Asegurar que el ordenamiento sea el correcto era de suma importancia.

Conclusión.
El desarrollo de este proyecto concluyó en una implementación que satisface las necesidades iniciales del problema, a través de la implementación de la programación orientada a objetos para una estructura nítida y eficiente, el desarrollo de los conocimientos expuestos previamente y el acople entre los mismo, fue determinante para culminar este proyecto.
A nivel personal significo un reto bastante grande, pero esto aseguro que, mediante la investigación e implementación de los distintos conocimientos necesarios para la resolución del proyecto, sirvieran para mejorar mis competencias como programador y prepararme para futuros retos en distintos ámbitos, como puede ser el profesional.
